package com.yss.acs.mock.webservice.webservice2;

import javax.jws.WebService;


/**
 * generated by mock-platform 
 */
@WebService(targetNamespace = "http://www.primeton.com/multiTGService", serviceName = "multiTGService", endpointInterface = "com.yss.acs.mock.webservice.webservice2.MultiTGService")
public class MultiTGServiceMockImpl implements MultiTGService {

    private java.util.Map<String, Object> mockResultMap = new java.util.HashMap<String, Object>();

    public void setMockPlatformResult(java.util.Map<String, Object> mockResultMap) {
        this.mockResultMap = mockResultMap;
    }

    public Object getMockPlatformResult(String methodName) {
        Object obj = mockResultMap.get(methodName);
        if(obj instanceof String) {
            obj = com.yss.acs.mock.util.MockResultUtil.getMockResult((String) obj);
        }
        return obj;
    }


    @Override
    public java.lang.String caseConfirm(
        java.lang.String in0
    ) {
                String methodName = Thread.currentThread().getStackTrace()[1].getMethodName();
                return (java.lang.String) getMockPlatformResult(methodName);
    }


    @Override
    public java.lang.String createCase(
        java.lang.String in0
    ) {
                String methodName = Thread.currentThread().getStackTrace()[1].getMethodName();
                return (java.lang.String) getMockPlatformResult(methodName);
    }


    @Override
    public java.lang.String queryCaseStatus(
        java.lang.String in0
    ) {
                String methodName = Thread.currentThread().getStackTrace()[1].getMethodName();
                return (java.lang.String) getMockPlatformResult(methodName);
    }


    @Override
    public java.lang.String backoutCase(
        java.lang.String in0
    ) {
                String methodName = Thread.currentThread().getStackTrace()[1].getMethodName();
                return (java.lang.String) getMockPlatformResult(methodName);
    }

}
